@extends('layout')

@section('content')
    <style>
        .ibox-content {
            color: black;
        }

        .main {
            font-family: "Poppins", "Open-Sans";
            letter-spacing: .2px;
        }

        .main-wrapper {
            display: flex;
        }

        .left-side {
            flex: 1;

        }

        .right-side {
            flex: 2;
            margin-left: 40px;
        }

        .step-one,
        .step-two {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .number-icon {
            display: flex;
            align-items: center;
            color: #58819F;

        }

        .number-icon .bi {
            margin-right: 30px;
        }

        .number-icon .bi.bi-circle-fill {
            margin-top: auto;
            margin-bottom: auto;
        }

        .number-icon .bi.bi-1-circle-fill {
            margin-top: auto;
            margin-bottom: auto;
        }

        /* style untuk card */
        .custom-card {
            border-radius: 10px;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
            position: relative;
            overflow: hidden;
        }

        .custom-card:hover {
            transform: scale(1.05);
            transition: transform 0.3s ease;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        }

        .custom-button-level {
            display: flex;
            align-items: center;
            justify-content: center;
            color: black;
            border: none;
            border-radius: 10px;
            padding: 6px 8px;
            margin: 5px 0;
            width: auto;
            font-size: 10px;
        }

        /* style check-box */
        .custom-card {
            display: flex;
            flex-direction: row-reverse;
            /* Membalikkan arah tata letak ke kanan */
        }

        .custom-card .content-question {
            flex-grow: 1;
            /* Menempatkan konten di tengah */
        }


        .custom-button-topik {
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #799DB7;
            border: none;
            color: white;
            border-radius: 10px;
            padding: 6px 8px;
            margin: 5px 0;
        }

        .button-group {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            margin-right: 10px;
        }

        .button-group button {
            width: 100%;
            text-align: center;
        }

        .button-group button span {
            font-size: 9px;
        }

        .card-body {
            display: flex;
            justify-content: space-between;
            padding: 13px;
        }

        .content-question p {
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 4;
            -webkit-box-orient: vertical;
        }

        #buatPaket {
            padding: 8px 16px;
            background-color: #58819F;
            color: white;
            border: none;
            border-radius: 8px;
            align-content: flex-start;
        }

        #backButton {
            padding: 8px 16px;
            background-color: #ED5564;
            color: white;
            border: none;
            border-radius: 8px;
            align-content: flex-start;
        }

        #simpanPaket {
            padding: 8px 16px;
            background-color: #58819F;
            color: white;
            border: none;
            border-radius: 8px;
            align-content: flex-start;
        }
    </style>
    <div class="col-md-12">
        <div class="ibox float-e-margins">
            <div class="ibox-content">
                <h2 style="font-family: 'Open Sans', sans-serif !important; font-weight: 600;">FORM PAKET BARU</h2>
                <div class="main">

                    <p>Form untuk membuat paket baru dengan nama dan jumlah soal sesuai dengan kebutuhan</p>
                    <hr class="mt-4 mb-4" style="border: 1px solid #A8BFD1">
                    <div class="main-wrapper">
                        <div class="left-side">
                            <div class="step-one pb-4">
                                <div class="number-icon">
                                    <i class="bi bi-1-circle-fill" style="font-size: 30px;"></i>
                                    <i class="bi bi-circle-fill"></i>
                                </div>
                            </div>
                            <div class="step-two pt-4 pb-4">
                                <div>
                                    <h3 style=" color: #B0B0B0; font-weight: 650; margin-right: 10px;">Pilih Soal Ujian</h3>
                                    <p style="color: #B0B0B0; margin-top: -10px;">Klik Soal</p>
                                </div>
                                <div class="number-icon">
                                    <i class="bi bi-2-circle-fill" style="font-size: 30px; color:#B0B0B0"></i>
                                    <i class="bi bi-circle-fill" style="color: #B0B0B0;"></i>
                                </div>
                            </div>
                        </div>

                        <div class="right-side">
                            <p>Steps 1/2</p>
                            <h2>Mari memilih soal untuk paket baru</h2>
                            <p>Tolong filter topik soal dan isi kotak checklist soal yang akan ditambahkan kedalam paket
                                yang dibuat</p>
                            <hr class="mt-4 mb-4" style="border: 1px solid #A8BFD1">

                            <div class="dropdown-filter pb-4">

                                <select id="kementerian">
                                    <option value="" selected disabled>pilih topik</option>
                                    @foreach ($topiks as $topik)
                                        <option value="{{ $topik->id }}">{{ $topik->nm_topik }}</option>
                                    @endforeach
                                </select>
                            </div>
                            <div class="row pb-4" id="soal-container"></div>
                            <button id="backButton">Sebelumnya</button>
                            <a href="#" id="simpanPaket">Selanjutnya</a>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {{-- fungsi untuk memfilter --}}

    <script type="text/javascript">
        $(document).ready(function() {
            function saveCheckboxState(checkboxId, isChecked) {
                localStorage.setItem(checkboxId, isChecked);
            }

            function getCheckboxState(checkboxId) {
                return localStorage.getItem(checkboxId) === 'true';
            }

            function clearAllCheckboxStates() {
                const keysToRemove = [];
                for (let i = 0; i < localStorage.length; i++) {
                    const key = localStorage.key(i);
                    if (key && key.startsWith('flexCheckDefault')) {
                        keysToRemove.push(key);
                    }
                }
                keysToRemove.forEach(key => localStorage.removeItem(key));
            }

            function loadCheckboxStates(idTopik) {
                $.ajax({
                    url: "{{ url('/paket/filter_soal') }}",
                    type: "GET",
                    data: {
                        id: idTopik
                    },
                    success: function(response) {
                        const soalContainer = $('#soal-container');
                        soalContainer.empty();

                        if (response.length > 0) {
                            $.each(response, function(index, soal) {
                                const checkboxId = `flexCheckDefault${index}_${idTopik}`;
                                soalContainer.append(`
                                    <div class="col-sm-6 mb-4">
                                        <div class="card custom-card">
                                            <div class="card-body" data-pertanyaan="${soal.pertanyaan}" data-topik="${soal.topik.nm_topik}" data-tingkat-kesulitan="${soal.tingkat_kesulitan.nm_tingkat_kesulitan}" data-id-soal="${soal.id_soal}">
                                                <div class="button-group">
                                                    <button class="custom-button-level">
                                                        <span>${soal.tingkat_kesulitan.nm_tingkat_kesulitan}</span>
                                                    </button>
                                                    <button class="custom-button-topik">
                                                        <span>${soal.topik.nm_topik}</span>
                                                    </button>
                                                </div>
                                                <div class="content-question">
                                                    <p style="font-size: 12px;">${soal.pertanyaan}</p>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" value="" id="${checkboxId}">
                                                    <label class="form-check-label" for="${checkboxId}"></label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                `);

                                // Set the checkbox state based on saved state
                                $(`#${checkboxId}`).prop('checked', getCheckboxState(
                                    checkboxId));

                                // Add event listener to save checkbox state on change
                                $(`#${checkboxId}`).change(function() {
                                    saveCheckboxState(checkboxId, this.checked);

                                    // Send the id_soal when checkbox is checked/unchecked
                                    const idSoal = $(this).closest('.card-body').data(
                                        'id-soal');
                                    $.ajax({
                                        url: "{{ url('#') }}",
                                        type: "POST",
                                        data: {
                                            id_soal: idSoal,
                                            checked: this.checked
                                        },
                                        headers: {
                                            'X-CSRF-TOKEN': $(
                                                    'meta[name="csrf-token"]')
                                                .attr('content')
                                        },
                                        success: function(response) {
                                            console.log(
                                                'Checkbox state saved:',
                                                response);
                                        },
                                        error: function(error) {
                                            console.error(
                                                'Error saving checkbox state:',
                                                error);
                                        }
                                    });
                                });
                            });
                        } else {
                            soalContainer.append(
                                '<div class="col-12"><p>No questions found for the selected topic.</p></div>'
                            );
                        }
                    }
                });
            }

            // Clear local storage for all checkboxes on page load
            clearAllCheckboxStates();

            // Initial load based on current topic selection
            const initialTopicId = $('#kementerian').val();
            if (initialTopicId) {
                loadCheckboxStates(initialTopicId);
            }

            // Reload checkboxes when the topic is changed
            $('#kementerian').change(function() {
                const idTopik = $(this).val();
                loadCheckboxStates(idTopik);
            });

            // Add event listener to the submit button
            $(document).ready(function() {
                // Objek untuk menyimpan data soal yang dipilih dari semua topik
                let allSelectedQuestions = {};

                // Fungsi untuk mengumpulkan soal yang dipilih
                function collectSelectedQuestions() {
                    $('#soal-container .form-check-input:checked').each(function() {
                        const cardBody = $(this).closest('.card-body');
                        const pertanyaan = cardBody.data('pertanyaan');
                        const topik = cardBody.data('topik');
                        const tingkatKesulitan = cardBody.data('tingkat-kesulitan');
                        const idSoal = cardBody.data('id-soal');

                        allSelectedQuestions[idSoal] = {
                            id_soal: idSoal,
                            pertanyaan: pertanyaan,
                            topik: topik,
                            tingkatKesulitan: tingkatKesulitan
                        };
                    });
                }

                // Event handler untuk tombol simpan
                $('#simpanPaket').off('click').on('click', function() {
                    // Kumpulkan semua soal yang dipilih sebelum mengirim
                    collectSelectedQuestions();

                    // Konversi objek allSelectedQuestions menjadi array
                    const selectedQuestionsArray = Object.values(allSelectedQuestions);

                    console.log(selectedQuestionsArray);
                    // Lakukan AJAX call atau tindakan lainnya di sini

                });

                // Event handler untuk perubahan topik (asumsikan ada elemen untuk mengubah topik)
                $('#changeTopic').on('change', function() {
                    const newTopic = $(this).val();

                    // Kumpulkan semua soal yang dipilih sebelum topik diubah
                    collectSelectedQuestions();

                    // Tampilkan atau sembunyikan soal berdasarkan topik yang dipilih
                    $('.form-check-input').each(function() {
                        const cardBody = $(this).closest('.card-body');
                        if (cardBody.data('topik') === newTopic) {
                            cardBody.closest('.col-sm-6').show();
                        } else {
                            cardBody.closest('.col-sm-6').hide();
                        }
                    });

                    // Tampilkan kembali checkbox yang sudah dipilih sebelumnya
                    for (const idSoal in allSelectedQuestions) {
                        $(`#${idSoal}`).prop('checked', true);
                    }
                });
            });


        });
    </script>



    {{-- counter dropup dan dropdown --}}
    <script>
        // Fungsi untuk mengurangi nilai
        function decreaseValue() {
            var value = parseInt(document.getElementById('jumlahSoal').value, 10);
            value = isNaN(value) ? 0 : value;
            value--;
            value = value < 0 ? 0 : value;
            document.getElementById('jumlahSoal').value = value;
        }

        // Fungsi untuk menambah nilai
        function increaseValue() {
            var value = parseInt(document.getElementById('jumlahSoal').value, 10);
            value = isNaN(value) ? 0 : value;
            value++;
            document.getElementById('jumlahSoal').value = value;
        }
    </script>

    {{-- fungsi untuk ganti komponen sisi kanan sisi kiri --}}
    <script>
        // Ambil tombol "Buat Paket"
        const buatPaketButton = document.querySelector('button');
        const backButton = document.querySelector('#backButton');

        // Ambil elemen left-side dan right-side pertama dan kedua
        const leftSide = document.querySelector('.left-side');
        const rightSide1 = document.querySelector('.right-side:nth-child(2)');
        const rightSide2 = document.querySelector('.right-side:nth-child(3)');

        // Sembunyikan right-side kedua secara default
        rightSide2.style.display = 'none';

        // Tambahkan event listener ke tombol "Buat Paket"
        buatPaketButton.addEventListener('click', function() {
            // Tampilkan right-side kedua dan sembunyikan right-side pertama
            rightSide2.style.display = 'block';
            rightSide1.style.display = 'none';
        });

        backButton.addEventListener('click', function() {
            rightSide2.style.display = 'none';
            rightSide1.style.display = 'block';
        })
    </script>

    {{-- fungsi untuk memberikan warna pada level soal --}}
    <script>
        $(document).ready(function() {
            function setButtonColor() {
                $('.custom-button-level').each(function() {
                    var level = $(this).find('span').text().trim();
                    var backgroundColor;

                    switch (level) {
                        case 'Susah':
                            backgroundColor = '#F57781';
                            break;
                        case 'Sedang':
                            backgroundColor = '#FAC477';
                            break;
                        case 'Mudah':
                            backgroundColor = '#1AB394';
                            break;
                        default:
                            backgroundColor = '';
                    }

                    $(this).css('background-color', backgroundColor);
                });
            }

            setButtonColor();


        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var nextButton = document.getElementById("buatPaket"); // Tombol "Selanjutnya"
            var leftSide = document.querySelector(".left-side"); // Bagian kiri

            nextButton.addEventListener("click", function() {
                var stepOne = leftSide.querySelector(".step-one"); // Langkah pertama
                var stepTwo = leftSide.querySelector(".step-two"); // Langkah kedua

                if (stepOne) {
                    // Jika sedang di langkah pertama, ubah warna teks dan ikon
                    stepOne.querySelector("h3").style.color = "#58819F"; // Warna biru
                    stepOne.querySelectorAll(".number-icon i").forEach(function(icon) {
                        icon.style.color = "#58819F"; // Warna biru
                    });

                    // Ubah warna teks pada langkah kedua menjadi abu-abu
                    stepTwo.querySelector("h3").style.color = "#58819F";
                    stepTwo.querySelectorAll(".number-icon i").forEach(function(icon) {
                        icon.style.color = "#58819F"; // Warna abu-abu
                    });
                } else if (stepTwo) {
                    // Jika sedang di langkah kedua, ubah warna teks pada kedua langkah menjadi biru
                    stepTwo.querySelector("h3").style.color = "#58819F"; // Warna biru
                    stepTwo.querySelectorAll(".number-icon i").forEach(function(icon) {
                        icon.style.color = "#58819F"; // Warna biru
                    });

                    stepOne.querySelector("h3").style.color = "#58819F"; // Warna biru
                    stepOne.querySelectorAll(".number-icon i").forEach(function(icon) {
                        icon.style.color = "#58819F"; // Warna biru
                    });
                }
            });
        });
    </script>
@endsection
